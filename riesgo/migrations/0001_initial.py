# Generated by Django 3.1.6 on 2021-02-17 12:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('compras', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActividadEconomica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grupo', models.CharField(max_length=120)),
                ('actividad', models.CharField(max_length=250)),
                ('clasificacion', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ['actividad'],
            },
        ),
        migrations.CreateModel(
            name='Jurisdiccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.PositiveIntegerField(verbose_name='código pais')),
                ('jurisdiccion', models.CharField(max_length=120)),
                ('peso', models.PositiveIntegerField(blank=True, null=True)),
                ('control', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'jurisdicciones',
                'ordering': ['jurisdiccion'],
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.PositiveIntegerField(unique=True)),
                ('pais', models.CharField(max_length=120)),
                ('nacionalidad', models.CharField(max_length=120)),
                ('iso_num', models.PositiveIntegerField(blank=True, null=True)),
                ('iso_cha', models.CharField(blank=True, max_length=3, null=True)),
                ('peso', models.PositiveIntegerField(blank=True, null=True)),
                ('control', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'paises',
                'ordering': ['nacionalidad'],
            },
        ),
        migrations.CreateModel(
            name='Profesion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name_plural': 'profesiones',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='EvaluacionRiesgo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('acceso_sistema', models.PositiveIntegerField(choices=[(1, 'No tiene acceso'), (2, 'Tiene Acceso al Codigo Fuente del Sistema Propio del Puesto Bajo supervisión'), (3, 'Tiene Acceso al Codigo Fuente del Sistema Propio del banco')], default=1, verbose_name='¿Tiene Acceso al código fuente del sistema propio del banco?')),
                ('acceso_equipos', models.PositiveIntegerField(choices=[(1, 'No tiene acceso'), (2, 'No aplica'), (3, 'Acceso como Administrador en los Equipos del banco')], default=1, verbose_name='¿Tiene acceso como administrador en los equipos del banco?')),
                ('acceso_info', models.PositiveIntegerField(choices=[(1, 'No tiene acceso'), (2, 'No aplica'), (3, 'Modifica información en los sistemas operativos del banco')], default=1, verbose_name='¿Modifica información en los sistemas operativos del banco?')),
                ('acceso_red', models.PositiveIntegerField(choices=[(1, 'No tiene acceso'), (2, 'Tiene acceso directo a la Base de Datos, Redes y seguridad informatica bajo supervisión'), (3, 'Tiene acceso directo a la Base de Datos, Redes y seguridad informatica')], default=1, verbose_name='¿Tiene acceso directo a la base de datos, redes y seguridad informatica?')),
                ('tiene_sucursal', models.PositiveIntegerField(choices=[(1, 'Posee sucursales a nivel nacional o no posee surcursales'), (2, 'Posee sucursales a nivel internacional pero no en Jurisdicciones de alto riesgo'), (3, 'Posee Sucursales a nivel Internacional en Juridicciones de Alto Riesgo')], default=1, verbose_name='¿Posee sucursales a nivel internacional en juridicciones de alto riesgo?')),
                ('usa_intermediarios', models.PositiveIntegerField(choices=[(1, 'No utiliza intermediarios'), (2, 'No aplica'), (3, 'Utiliza Intermediarios para realizar su función')], default=1, verbose_name='¿Utiliza intermediarios para realizar su función?')),
                ('en_lista', models.PositiveIntegerField(choices=[(1, 'No hay coincidencias en listas'), (2, 'No aplica'), (3, 'Filtros en las Lista de Riesgo nacionales, internacionales y de referencia')], default=1, verbose_name='¿Tiene filtros en las lista de riesgo nacionales, internacionales y de referencia?')),
                ('materialmente_importante', models.PositiveIntegerField(choices=[(1, 'Es inmaterialmente importante'), (2, 'Es Materialmente Importante entre 50% y  60%'), (3, 'Es Materialmente Importante  de 61% a mas')], default=1, verbose_name='¿Es materialmente importante?')),
                ('es_cliente', models.PositiveIntegerField(choices=[(1, 'Es cliente del banco'), (2, 'No aplica'), (3, 'No posee cuentas PB')], default=1, verbose_name='¿Es cliente del banco?')),
                ('tiene_alerta', models.PositiveIntegerField(choices=[(1, 'No utiliza intermediarios'), (2, 'No aplica'), (3, 'Utiliza Intermediarios para realizar su función')], default=1, verbose_name='¿Ha presentado alguna señal de alerta?')),
                ('evaluacion_proveedor', models.PositiveIntegerField(choices=[(1, 'Su evaluación desempeño  como Proveedor de Servicios es mayor a 80%'), (2, 'Su evaluación desempeño  como Proveedor de Servicios esta entre %51 y 79% '), (3, 'Su evaluación desempeño  como Proveedor de Servicios es Menor al 50%')], default=1, verbose_name='¿Como es su evaluación desempeño como proveedor de servicios?')),
                ('no_contingencia', models.PositiveIntegerField(choices=[(1, 'Posee Plan de Continuidad de Negocios y/o Plan de contingecia'), (2, 'No aplica'), (3, 'No Posee Plan de Continuidad de Negocios y/o Plan de contingecia')], default=1, verbose_name='¿Posee Plan de Continuidad de Negocios y/o Plan de contingecia?')),
                ('tiene_experiencia', models.PositiveIntegerField(choices=[(1, 'Tiene amplia experiencia en la materia'), (2, 'No aplica'), (3, 'Su experiencia como Proveedor de servicio es menor a 3 años')], default=1, verbose_name='¿Tiene experiencia en la materia?')),
                ('estados_financieros', models.PositiveIntegerField(choices=[(1, 'Estados financieros auditados actualizados (según aplique)'), (2, 'Estados financieros auditados (según aplique) desactualizados'), (3, 'No posee Estados financieros auditados (según aplique)')], default=1, verbose_name='¿Tiene estados financieros auditados?')),
                ('tiene_quejas', models.PositiveIntegerField(choices=[(1, 'No ha tenido quejas, mala reputación, incumplimientos o litigios'), (2, 'No aplica'), (3, 'Reputación comercial, quejas, cumplimiento y litigios pendientes')], default=1, verbose_name='¿Ha ha tenido quejas, mala reputación, incumplimientos o litigios?')),
                ('riesgo_tipo_servicio', models.FloatField(blank=True, null=True, verbose_name='Nivel riesgo ripo de servicio')),
                ('riesgo_proveedor', models.FloatField(blank=True, null=True, verbose_name='Nivel riesgo debida diligencia proveedor')),
                ('nivel_riesgo', models.PositiveIntegerField(blank=True, choices=[(1, 'Bajo'), (2, 'Medio'), (3, 'Alto')], null=True)),
                ('calculo_riesgo', models.FloatField(blank=True, null=True)),
                ('actividad_economica', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riesgo.actividadeconomica', verbose_name='Actividad económica')),
                ('jurisdiccion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riesgo.jurisdiccion')),
                ('nacionalidad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='riesgo.pais')),
                ('proveedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compras.proveedor')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'evaluación de riesgo',
                'verbose_name_plural': 'evaluaciones de riesgo',
            },
        ),
    ]
